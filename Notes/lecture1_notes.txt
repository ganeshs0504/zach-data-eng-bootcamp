Data Dimensions
 - Dimensions are attributes of an entity, kinda like columns
 - Incluldes an indentifier dimension (Primary Key)
 - Two flavors of dimensions 
    - Slowly changing dimension (values might changes over time)
    - Fixed (Static)
 - Important to know the different flavor of dimension as its needed when modeling a data model.

In Modeling of data the first step is to identify the consumer of the modeled data.
 - Could be data analyst/ Scientist (Very easy and not many complex data types)
 - Other data engineers (Compact and harder to query. Nested types are okay)
 - ML models (Need to understand how the model is trained)
 - Customers (Needs to be easily understood and interpreted in the form of charts preferebly)

Cumulative Table Design
These tables are for holding on to historical data
It will have two dataframes, TODAY and YESTERDAY. Perform a full outer join to keep everythihng and then COALESCE to hang on to all the history.
EG: TO understand user activity in interval of each days

Compactness vs Usability Trade off
Usability: No complex data types and can be easily manipulated with WHERE and GROUP BY
Compact data: Compressed to be as small as possible (Not human readable)
Middle ground: Use complex data types (ARRAY, MAP, and STRUCT)

Run length encoding is a compression technique in data engineering. It compresses based on dimension and nullifies th duplicates in a contigues rows. (But the column in which the compression is applied need to be sorted)